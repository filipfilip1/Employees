// <auto-generated />
using Employees.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Employees.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20231205185600_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Employees.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<int>("Experience")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkAddressId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkAddressId");

                    b.ToTable("Employees");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Employee");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Employees.Models.WorkAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApartmentNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkAddresses");
                });

            modelBuilder.Entity("Employees.Models.ManualWorker", b =>
                {
                    b.HasBaseType("Employees.Models.Employee");

                    b.Property<int>("PhysicalStrength")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("ManualWorker");
                });

            modelBuilder.Entity("Employees.Models.OfficeEmployee", b =>
                {
                    b.HasBaseType("Employees.Models.Employee");

                    b.Property<int>("Intellect")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("OfficeEmployee");
                });

            modelBuilder.Entity("Employees.Models.Trader", b =>
                {
                    b.HasBaseType("Employees.Models.Employee");

                    b.Property<double>("Comission")
                        .HasColumnType("REAL");

                    b.Property<int>("Efficiency")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Trader");
                });

            modelBuilder.Entity("Employees.Models.Employee", b =>
                {
                    b.HasOne("Employees.Models.WorkAddress", "WorkAddress")
                        .WithMany("Employees")
                        .HasForeignKey("WorkAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkAddress");
                });

            modelBuilder.Entity("Employees.Models.WorkAddress", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
